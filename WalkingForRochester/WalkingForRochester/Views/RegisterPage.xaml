<?xml version = "1.0"
      encoding = "utf-8" ?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:WalkingForRochester.ViewModels;assembly=WalkingForRochester"
             xmlns:material="clr-namespace:XF.Material.Forms.UI;assembly=XF.Material"
             xmlns:dxui="http://dips.xamarin.ui.com"
             xmlns:sk="clr-namespace:Xamarin.Forms.Skeleton;assembly=Xamarin.Forms.Skeleton"
             xmlns:ff="clr-namespace:FFImageLoading.Forms;assembly=FFImageLoading.Forms"
             xmlns:pancakeView="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:system="clr-namespace:System;assembly=netstandard"
             mc:Ignorable="d"
             x:Class="WalkingForRochester.Views.RegisterPage"
             Shell.TabBarIsVisible="false"
             Visual="Material" >
    <!--        Authors: 
                NTID MAD TEAM
                    Mangers:        Xiangyu Shi
                                    Michelle Olson
    
                    Programmer:     Xiangyu Shi,
                                    Michelle Olson
                                    Zhencheng Chen,
                                    Harsh Mathur,
                                    Quoc Nhan,
                                    Chase Roth  -->

    <ContentPage.BindingContext>
        <vm:RegisterViewModel />
    </ContentPage.BindingContext>


    <ContentPage.Resources>
        <ResourceDictionary>
            <xct:ItemSelectedEventArgsConverter x:Key="ItemSelectedEventArgsConverter" />

            <Style TargetType="material:MaterialTextField" >
                <Setter Property="BackgroundColor" Value="White" />
                <Setter Property="CardBackgroundColor" Value="White" />
                <Setter Property="TintColor" Value="#272765" />
                <Setter Property="HelperTextColor" Value="#272765" />
            </Style>
            <Style TargetType="material:MaterialDateField" >
                <Setter Property="BackgroundColor" Value="White" />
                <Setter Property="TintColor" Value="#272765" />
                <Setter Property="HelperTextColor" Value="#272765" />
            </Style>

            <Color x:Key="IconFgColor" >white</Color>

            <Style x:Key="MaterialIcons" TargetType="{x:Type Label}" >
                <Setter Property="FontFamily" Value="CustomMaterialFont" />
                <Setter Property="HorizontalOptions" Value="Center" />
                <Setter Property="VerticalOptions" Value="Center" />
                <Setter Property="TextColor" Value="{DynamicResource IconFgColor}" />
                <Setter Property="FontSize" Value="Large" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <ContentPage.Content>
        <AbsoluteLayout>
            <!--using absolute layout to set up background-->
            <Image Source="rainbowbg.png"
                   Aspect="AspectFill"
                   AbsoluteLayout.LayoutBounds="1, 1, 1, 1"
                   AbsoluteLayout.LayoutFlags="All" />

            <!-- IsVisible="{Binding FormVisible}" -->
            <ScrollView
                BackgroundColor="#88FFFFFF"
                AbsoluteLayout.LayoutBounds="1, 1, 1, 1"
                AbsoluteLayout.LayoutFlags="All" >

                <ScrollView.Padding>
                    <OnPlatform x:TypeArguments="Thickness" >
                        <On Platform="iOS" Value="20,20,20,20" />
                        <On Platform="Android" Value="20,20,20,20" />
                    </OnPlatform>
                </ScrollView.Padding>

                <StackLayout VerticalOptions="FillAndExpand" >
                    <!-- tittle -->
                    <Frame BackgroundColor="#DD272765" >
                        <StackLayout Padding="20,40,20,10" >
                            <Label Text="Sign up" FontSize="30" HorizontalTextAlignment="Center" TextColor="White" />
                            <BoxView HeightRequest="2" Color="LightGray" />
                        </StackLayout>
                    </Frame>

                    <StackLayout Spacing="10" Padding="0,20,0,20" >
                        <material:MaterialTextField
                            Placeholder="First Name"
                            Text="{Binding FirstName}"
                            InputType="Default"
                            ReturnType="Next" />
                        <material:MaterialTextField
                            Placeholder="Last Name"
                            Text="{Binding LastName}"
                            InputType="Default"
                            ReturnType="Next" />
                        <material:MaterialTextField
                            Placeholder="Email Address"
                            Text="{Binding Email}"
                            ErrorText="Invalidate, not match format."
                            HasError="{Binding EmailError}"
                            InputType="Email"
                            ReturnType="Next" />
                        <material:MaterialTextField
                            Placeholder="Phone Number"
                            HelperText="Need contact information, will remain private."
                            Text="{Binding PhoneNumber}"
                            ErrorText="Invalidate, length must be over 10"
                            HasError="{Binding PhoneNumberError}"
                            MaxLength="10"
                            InputType="Telephone"
                            ReturnType="Next" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <material:MaterialTextField
                                Placeholder="Address"
                                HelperText="Need address information, will remain private."
                                IsEnabled="false"
                                Text="{Binding Address}"
                                InputType="Default"
                                ReturnType="Next" />
                            <ImageButton
                                Grid.Column="1"
                                Source="icon_search.png"
                                Padding="15"
                                WidthRequest="50"
                                HeightRequest="50"
                                BackgroundColor="#453A70"
                                Command="{Binding CallSearchCommand}" />
                        </Grid>
                        <DatePicker VerticalOptions="CenterAndExpand" 
                                    IsVisible="{OnPlatform Android=True, iOS=False}"
                                    Date="{Binding DateOfBirth, Mode=TwoWay}"
                                    x:Name="DOBPicker" >
                            <DatePicker.Format>MM/dd/yyyy</DatePicker.Format>
                            <DatePicker.MinimumDate>
                                <system:DateTime x:FactoryMethod="Parse" >
                                    <x:Arguments>
                                        <x:String>Jan 1 1900</x:String>
                                    </x:Arguments>
                                </system:DateTime>
                            </DatePicker.MinimumDate>
                            <DatePicker.MaximumDate>
                                <system:DateTime x:FactoryMethod="Parse" >
                                    <x:Arguments>
                                        <x:String>Dec 31 2050</x:String>
                                    </x:Arguments>
                                </system:DateTime>
                            </DatePicker.MaximumDate>
                        </DatePicker>
                        <material:MaterialDateField
                            IsVisible="{OnPlatform Android=False, iOS=True}"
                            x:Name="DateField"
                            Placeholder="MM/DD/YYYY"
                            HelperText="Follow format MM/DD/YYYY."
                            Date="{Binding DateOfBirth, Mode=TwoWay}"
                            ErrorText="{Binding DateOfBirthErrorText}"
                            HasError="{Binding DateOfBirthError}" />
                        <material:MaterialTextField
                            Placeholder="Password"
                            Text="{Binding Password}"
                            ErrorText="{Binding PasswordErrorText}"
                            HasError="{Binding PasswordError}"
                            HelperText="Password length must be 6 or more characters."
                            InputType="Password"
                            ReturnType="Next" />
                        <material:MaterialTextField
                            Placeholder="Confirm Password"
                            Text="{Binding ConfirmPassword}"
                            ErrorText="{Binding ConfirmPasswordErrorText}"
                            HasError="{Binding ConfirmPasswordError}"
                            HelperText="Password must be the same."
                            InputType="Password"
                            ReturnType="Done" />
                        <StackLayout Orientation="Horizontal" >
                            <material:MaterialButton
                                HeightRequest="60"
                                WidthRequest="150"
                                BackgroundColor="White"
                                BorderColor="#272765"
                                BorderWidth="2"
                                HorizontalOptions="CenterAndExpand"
                                Text="Cancel"
                                TextColor="#272765"
                                Command="{Binding CancelCommand}" />
                            <material:MaterialButton
                                HeightRequest="60"
                                WidthRequest="150"
                                BackgroundColor="#272765"
                                HorizontalOptions="CenterAndExpand"
                                Text="Sign up"
                                TextColor="White"
                                Command="{Binding RegisterCommand}" />
                        </StackLayout>
                    </StackLayout>

                </StackLayout>
            </ScrollView>


            <!-- Search Frame -->
            <Frame
                Margin="{OnPlatform Android=20, iOS='20,40,20,20'}"
                CornerRadius="5"
                HorizontalOptions="CenterAndExpand"
                VerticalOptions="CenterAndExpand"
                IsVisible="{Binding SearchVisible}"
                BackgroundColor="#F0FFFFFF" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <SearchBar
                        x:Name="SearchBar"
                        Placeholder="Search Address" >
                        <SearchBar.Behaviors>
                            <xct:EventToCommandBehavior
                                EventName="TextChanged"
                                Command="{Binding SearchCommand}"
                                CommandParameter="{Binding Text, Source={x:Reference SearchBar}}" />
                        </SearchBar.Behaviors>
                    </SearchBar>

                    <ListView
                        Grid.Row="1"
                        SelectionMode="Single"
                        ItemsSource="{Binding SearchResults}" >
                        <ListView.Behaviors>
                            <xct:EventToCommandBehavior
                                EventName="ItemSelected"
                                Command="{Binding SearchSelectedCommand}"
                                EventArgsConverter="{StaticResource ItemSelectedEventArgsConverter}" />
                        </ListView.Behaviors>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextCell Text="{Binding Description}"
                                          TextColor="#2F3767" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <material:MaterialButton
                        Grid.Row="2"
                        Text="Cancel"
                        Command="{Binding SearchCancelCommand}" />
                </Grid>
            </Frame>
        </AbsoluteLayout>
    </ContentPage.Content>
</ContentPage>